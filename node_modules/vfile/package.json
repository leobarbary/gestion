{
  "_args": [
    [
      {
        "raw": "vfile@2.0.0",
        "scope": null,
        "escapedName": "vfile",
        "name": "vfile",
        "rawSpec": "2.0.0",
        "spec": "2.0.0",
        "type": "version"
      },
      "/Users/fthetis/Documents/2017.4/Project_ymple/ymple-commerce-1.0/node_modules/geojsonhint"
    ]
  ],
  "_from": "vfile@2.0.0",
  "_id": "vfile@2.0.0",
  "_inCache": true,
  "_location": "/vfile",
  "_nodeVersion": "5.0.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/vfile-2.0.0.tgz_1471786165800_0.7581158040557057"
  },
  "_npmUser": {
    "name": "wooorm",
    "email": "tituswormer@gmail.com"
  },
  "_npmVersion": "3.3.6",
  "_phantomChildren": {},
  "_requested": {
    "raw": "vfile@2.0.0",
    "scope": null,
    "escapedName": "vfile",
    "name": "vfile",
    "rawSpec": "2.0.0",
    "spec": "2.0.0",
    "type": "version"
  },
  "_requiredBy": [
    "/geojsonhint"
  ],
  "_resolved": "https://registry.npmjs.org/vfile/-/vfile-2.0.0.tgz",
  "_shasum": "88620500e36bad025a0b01cc25106dbcb3090548",
  "_shrinkwrap": null,
  "_spec": "vfile@2.0.0",
  "_where": "/Users/fthetis/Documents/2017.4/Project_ymple/ymple-commerce-1.0/node_modules/geojsonhint",
  "author": {
    "name": "Titus Wormer",
    "email": "tituswormer@gmail.com",
    "url": "http://wooorm.com"
  },
  "bugs": {
    "url": "https://github.com/wooorm/vfile/issues"
  },
  "contributors": [
    {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "http://wooorm.com"
    }
  ],
  "dependencies": {
    "has": "^1.0.1",
    "is-buffer": "^1.1.4",
    "replace-ext": "1.0.0",
    "unist-util-stringify-position": "^1.0.0",
    "x-is-string": "^0.1.0"
  },
  "description": "Virtual file format for text processing",
  "devDependencies": {
    "browserify": "^13.0.0",
    "esmangle": "^1.0.0",
    "nyc": "^8.1.0",
    "remark-cli": "^1.0.0",
    "remark-comment-config": "^4.0.0",
    "remark-github": "^5.0.0",
    "remark-lint": "^4.0.0",
    "remark-toc": "^3.0.0",
    "remark-validate-links": "^4.0.0",
    "tape": "^4.4.0",
    "xo": "^0.16.0"
  },
  "directories": {},
  "dist": {
    "shasum": "88620500e36bad025a0b01cc25106dbcb3090548",
    "tarball": "https://registry.npmjs.org/vfile/-/vfile-2.0.0.tgz"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "c661fa55b4a3c272e37eb5278bae4f805b8680f4",
  "homepage": "https://github.com/wooorm/vfile#readme",
  "keywords": [
    "virtual",
    "file",
    "text",
    "processing",
    "message",
    "warning",
    "error",
    "remark",
    "retext"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "wooorm",
      "email": "tituswormer@gmail.com"
    }
  ],
  "name": "vfile",
  "nyc": {
    "check-coverage": true,
    "lines": 100,
    "functions": 100,
    "branches": 100
  },
  "optionalDependencies": {},
  "readme": "# ![vfile][]\n\n[![Build Status][build-badge]][build-status]\n[![Coverage Status][coverage-badge]][coverage-status]\n\n> A lot has changed recently, other tools may still use the [1.0.0][]\n> API.\n\n**VFile** is a virtual file format used by [**unified**][unified],\na text processing umbrella (it powers [**retext**][retext] for\nnatural language, [**remark**][remark] for markdown, and\n[**rehype**][rehype] for HTML).  Each processors that parse, transform,\nand compile text, and need a virtual representation of files and a\nplace to store [messages][] about them.  Plus, they work in the browser.\n**VFile** provides these requirements at a small size, in IE 9 and up.\n\n> **VFile** is different from the excellent [**vinyl**][vinyl]\n> in that it has a smaller API, a smaller size, and focusses on\n> [messages][].\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install vfile\n```\n\n## Table of Contents\n\n*   [Usage](#usage)\n*   [List of Utilities](#list-of-utilities)\n*   [API](#api)\n    *   [VFile(\\[options\\])](#vfileoptions)\n    *   [vfile.contents](#vfilecontents)\n    *   [vfile.cwd](#vfilecwd)\n    *   [vfile.path](#vfilepath)\n    *   [vfile.basename](#vfilebasename)\n    *   [vfile.stem](#vfilestem)\n    *   [vfile.extname](#vfileextname)\n    *   [vfile.dirname](#vfiledirname)\n    *   [vfile.history](#vfilehistory)\n    *   [vfile.messages](#vfilemessages)\n    *   [vfile.data](#vfiledata)\n    *   [VFile#toString(\\[encoding='utf8'\\])](#vfiletostringencodingutf8)\n    *   [VFile#message(reason\\[, position\\[, ruleId\\]\\])](#vfilemessagereason-position-ruleid)\n    *   [VFile#fail(reason\\[, position\\[, ruleId\\]\\])](#vfilefailreason-position-ruleid)\n    *   [VFileMessage](#vfilemessage)\n*   [License](#license)\n\n## Usage\n\n```js\nvar vfile = require('vfile');\n\nvar file = vfile({path: '~/example.txt', contents: 'Alpha *braavo* charlie.'});\n\nconsole.log(file.path);\n// '~/example.txt'\n\nconsole.log(file.dirname);\n// '~'\n\nfile.extname = '.md';\n\nconsole.log(file.basename);\n// 'example.md'\n\nfile.basename = 'index.text';\n\nconsole.log(file.history);\n// [ '~/example.txt', '~/example.md', '~/index.text' ]\n\nfile.message('`braavo` is misspelt; did you mean `bravo`?', {line: 1, column: 8});\n// { [~/index.text:1:8: `braavo` is misspelt; did you mean `bravo`?]\n//   message: '`braavo` is misspelt; did you mean `bravo`?',\n//   name: '~/index.text:1:8',\n//   file: '~/index.text',\n//   reason: '`braavo` is misspelt; did you mean `bravo`?',\n//   line: 1,\n//   column: 8,\n//   location:\n//    { start: { line: 1, column: 8 },\n//      end: { line: null, column: null } },\n//   ruleId: null,\n//   source: null,\n//   fatal: false }\n```\n\n## List of Utilities\n\nThe following list of projects includes tools for working with virtual\nfiles.  See [**Unist**][unist] for projects working with nodes.\n\n*   [`dustinspecker/convert-vinyl-to-vfile`](https://github.com/dustinspecker/convert-vinyl-to-vfile)\n    — Convert from [Vinyl][];\n*   [`shinnn/is-vfile-message`](https://github.com/shinnn/is-vfile-message)\n    — Check if a value is a `VFileMessage` object;\n*   [`wooorm/to-vfile`](https://github.com/wooorm/to-vfile)\n    — Create a virtual file from a file-path (and optionally read it);\n*   [`wooorm/vfile-find-down`](https://github.com/wooorm/vfile-find-down)\n    — Find files by searching the file system downwards;\n*   [`wooorm/vfile-find-up`](https://github.com/wooorm/vfile-find-up)\n    — Find files by searching the file system upwards;\n*   [`wooorm/vfile-location`](https://github.com/wooorm/vfile-location)\n    — Convert between line/column- and range-based locations;\n*   [`wooorm/vfile-statistics`](https://github.com/wooorm/vfile-statistics)\n    — Count messages per category;\n*   [`shinnn/vfile-messages-to-vscode-diagnostics`](https://github.com/shinnn/vfile-messages-to-vscode-diagnostics)\n    — Convert to VS Code diagnostics;\n*   [`wooorm/vfile-reporter`](https://github.com/wooorm/vfile-reporter)\n    — Stylish reporter.\n*   [`wooorm/vfile-sort`](https://github.com/wooorm/vfile-sort)\n    — Sort messages by line/column;\n*   [`sindresorhus/vfile-to-eslint`](https://github.com/sindresorhus/vfile-to-eslint)\n    — Convert VFiles to ESLint formatter compatible output;\n*   [`sindresorhus/vfile-reporter-pretty`](https://github.com/sindresorhus/vfile-reporter-pretty)\n    — Pretty reporter;\n\n## API\n\n### `VFile([options])`\n\nCreate a new virtual file.  If `options` is `string` or `Buffer`, treats\nit as `{contents: options}`.  If `options` is a `VFile`, returns it.\nAll other options are set on the newly created `vfile`.\n\nPath related properties are set in the following order (least specific\nto most specific): `history`, `path`, `basename`, `stem`, `extname`,\n`dirname`.\n\nIt’s not possible to either `dirname` or `extname` without setting\neither `history`, `path`, `basename`, or `stem` as well.\n\n###### Example\n\n```js\nvfile();\nvfile('console.log(\"alpha\");');\nvfile(Buffer.from('exit 1'));\nvfile({path: path.join(__dirname, 'readme.md')});\nvfile({stem: 'readme', extname: '.md', dirname: __dirname});\nvfile({other: 'properties', are: 'copied', ov: {e: 'r'}});\n```\n\n### `vfile.contents`\n\n`Buffer`, `string`, `null` — Raw value.\n\n### `vfile.cwd`\n\n`string` — Base of `path`.  Defaults to `process.cwd()`.\n\n### `vfile.path`\n\n`string?` — Path of `vfile`.  Cannot be nullified.\n\n### `vfile.basename`\n\n`string?` — Current name (including extension) of `vfile`.  Cannot\ncontain path separators.  Cannot be nullified either (use\n`file.path = file.dirname` instead).\n\n### `vfile.stem`\n\n`string?` — Name (without extension) of `vfile`.  Cannot be nullified,\nand cannot contain path separators.\n\n### `vfile.extname`\n\n`string?` — Extension (with dot) of `vfile`.  Cannot be set if\nthere’s no `path` yet and cannot contain path separators.\n\n### `vfile.dirname`\n\n`string?` — Path to parent directory of `vfile`.  Cannot be set if\nthere’s no `path` yet.\n\n### `vfile.history`\n\n`Array.<string>` — List of file-paths the file moved between.\n\n### `vfile.messages`\n\n`Array.<VFileMessage>` — List of messages associated with the file.\n\n### `vfile.data`\n\n`Object` — Place to store custom information.  It’s OK to store custom\ndata directly on the `vfile`, moving it to `data` gives a _little_ more\nprivacy.\n\n### `VFile#toString([encoding='utf8'])`\n\nConvert contents of `vfile` to string.  If `contents` is a buffer,\n`encoding` is used to stringify buffers (default: `'utf8'`).\n\n### `VFile#message(reason[, position[, ruleId]])`\n\nAssociates a message with the file for `reason` at `position`.  When an\nerror is passed in as `reason`, copies the stack.\n\n*   `reason` (`string` or `Error`)\n    — Reason for message, uses the stack and message of the error if given;\n*   `position` (`Node`, `Location`, or `Position`, optional)\n    — Place at which the message occurred in `vfile`.\n*   `ruleId` (`string`, optional)\n    — Category of warning.\n\n###### Returns\n\n[`VFileMessage`][message].\n\n### `VFile#fail(reason[, position[, ruleId]])`\n\nAssociates a fatal message with the file, then immediately throws it.\nNote: fatal errors mean a file is no longer processable.\nCalls [`#message()`][messages] internally.\n\n###### Throws\n\n[`VFileMessage`][message].\n\n### `VFileMessage`\n\nFile-related message describing something at certain position (extends\n`Error`).\n\n###### Properties\n\n*   `file` (`string`) — File-path (when the message was triggered);\n*   `reason` (`string`) — Reason for message;\n*   `ruleId` (`string?`) — Category of message;\n*   `source` (`string?`) — Namespace of warning;\n*   `stack` (`string?`) — Stack of message;\n*   `fatal` (`boolean?`) — If `true`, marks associated file as no longer\n    processable;\n*   `line` (`number?`) — Starting line of error;\n*   `column` (`number?`) — Starting column of error;\n*   `location` (`object`) — Full range information, when available.  Has\n    `start` and `end` properties, both set to an object with `line` and\n    `column`, set to `number?`.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://img.shields.io/travis/wooorm/vfile.svg\n\n[build-status]: https://travis-ci.org/wooorm/vfile\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/wooorm/vfile.svg\n\n[coverage-status]: https://codecov.io/github/wooorm/vfile\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n\n[vfile]: https://cdn.rawgit.com/wooorm/vfile/master/logo.svg\n\n[unified]: https://github.com/wooorm/unified\n\n[retext]: https://github.com/wooorm/retext\n\n[remark]: https://github.com/wooorm/remark\n\n[rehype]: https://github.com/wooorm/rehype\n\n[vinyl]: https://github.com/wearefractal/vinyl\n\n[unist]: https://github.com/wooorm/unist#list-of-utilities\n\n[messages]: #vfilemessagereason-position-ruleid\n\n[message]: #vfilemessage\n\n[1.0.0]: https://github.com/wooorm/vfile/tree/d5abd71\n",
  "readmeFilename": "readme.md",
  "remarkConfig": {
    "output": true,
    "plugins": {
      "comment-config": null,
      "github": null,
      "lint": {
        "heading-increment": false,
        "list-item-spacing": false,
        "no-missing-blank-lines": false,
        "no-duplicate-headings": false
      },
      "toc": {
        "tight": true,
        "maxDepth": 3
      },
      "validate-links": null
    },
    "settings": {
      "bullet": "*"
    }
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/wooorm/vfile.git"
  },
  "scripts": {
    "build": "npm run build-md && npm run build-bundle && npm run build-mangle",
    "build-bundle": "browserify index.js -s VFile > vfile.js",
    "build-mangle": "esmangle vfile.js > vfile.min.js",
    "build-md": "remark . --quiet --frail",
    "lint": "xo",
    "test": "npm run build && npm run lint && npm run test-coverage",
    "test-api": "node test",
    "test-coverage": "nyc --reporter lcov tape test.js"
  },
  "version": "2.0.0",
  "xo": {
    "space": true,
    "rules": {
      "guard-for-in": "off",
      "max-lines": "off"
    },
    "ignores": [
      "vfile.js",
      "vfile.min.js"
    ]
  }
}
